#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// ------------------------------------------------------------------------------
// |  0  |  1  |  2  |  3  |  4  |  5  |    |  6  |  7  |  8  |  9  |  10 |  11 |
// |  12 |  13 |  14 |  15 |  16 |  17 |    |  18 |  19 |  20 |  21 |  22 |  23 |
// |  24 |  25 |  26 |  27 |  28 |  29 |    |  30 |  31 |  32 |  33 |  34 |  35 |
//                   |  36 |  37 |  38 |    |  39 |  40 |  41 |
// ------------------------------------------------------------------------------

// SPANISH KEYCODES ------------------------------------------------------------

#define ES_REXC    LS(N1) // !
#define ES_DQT     LS(N2) // "
#define ES_HASH    LS(N3) // #
#define ES_DOLLAR  LS(N4) // $
#define ES_PERCENT LS(N5) // %
#define ES_AMPS    LS(N6) // &
#define ES_SLASH   LS(N7) // /
#define ES_LPAR    LS(N8) // (
#define ES_RPAR    LS(N9) // )
#define ES_EQUAL   LS(N0) // =

#define ES_AT RA(N2) // @

#define ES_PIPE GRAVE // |
#define ES_SQT  MINUS // '
#define ES_LQMK EQUAL // ¿

#define ES_DEGREE LS(GRAVE) // °
#define ES_RQMK   LS(MINUS) // ?
#define ES_LEXC   LS(EQUAL) // ¡

#define ES_BCKSLH RA(MINUS) // \

#define ES_ACCT  LEFT_BRACKET  // ´
#define ES_PLUS  RIGHT_BRACKET // +
#define ES_LBRC  SINGLE_QUOTE  // {
#define ES_RBRC  BACKSLASH     // }
#define ES_MINUS SLASH         // -

#define ES_UMLAUT   LS(LEFT_BRACKET)  // ¨
#define ES_STAR     LS(RIGHT_BRACKET) // *
#define ES_LBCK     LS(SINGLE_QUOTE)  // [
#define ES_RBCK     LS(BACKSLASH)     // ]
#define ES_UNDERSCR LS(SLASH)         // _

#define ES_TILDE RA(RIGHT_BRACKET) // ~
#define ES_CARET RA(SINGLE_QUOTE)  // ^

#define ES_LESSTH RA(LS(Z)) // <
#define ES_GREATH RA(LS(X)) // >

// LAYERS ----------------------------------------------------------------------
#define BASE_L    0
#define ARROWS_L  1
#define CHARS_L   2
#define NUMBERS_L 3

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // --------------------------------------------------------------------------------
            // | CLST |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |  ´   |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  Ñ  | SHFT |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  -  | CTRL |
            //                    | LNX | ALT | LY2 |   | LY1 | SPC | LY3 |
            // --------------------------------------------------------------------------------
            bindings = <
            &kp LS(LCTRL) &kp Q &kp W &kp E &kp R &kp T      &kp Y &kp U &kp I     &kp O   &kp P     &kp ES_ACCT
            &kp LSHFT     &kp A &kp S &kp D &kp F &kp G      &kp H &kp J &kp K     &kp L   &kp SEMI  &kp RSHFT
            &kp LCTRL     &kp Z &kp X &kp C &kp V &kp B      &kp N &kp M &kp COMMA &kp DOT &kp SLASH &kp RCTRL
                          &kp LGUI &kp LALT &mo CHARS_L      &mo ARROWS_L &kp SPACE &mo NUMBERS_L
            >;
        };

        arrows_layer {
            // ---------------------------------------------------------------------------------------
            // | TNS | VOL- | HOME |  UP  | END  | VOL+ |   |  F2  |  F3  |  F4  |  F11 | F12  | TNS |
            // | TNS | UNDO | LEFT | DOWN | RIGH | REDO |   | CTRL | DEL  | ENTR | BSPC | TAB  | TNS |
            // | TNS | MUTE | PGUP | PRNT | PGDW | ESC  |   | SHFT | CAPS | LNX  |      | MENU | TNS |
            //                     |      | ALT  | CLST |   |      |      |      |
            // ---------------------------------------------------------------------------------------
            bindings = <
            &trans &kp C_VOL_DN &kp HOME       &kp UP_ARROW    &kp END         &kp C_VOL_UP      &kp F2    &kp F3   &kp F4    &kp F11       &kp F12     &trans
            &trans &kp K_UNDO   &kp LEFT_ARROW &kp DOWN_ARROW  &kp RIGHT_ARROW &kp K_REDO        &kp RCTRL &kp DEL  &kp ENTER &kp BACKSPACE &kp TAB     &trans
            &trans &kp C_MUTE   &kp PAGE_UP    &kp PRINTSCREEN &kp PAGE_DOWN   &kp ESC           &kp RSHFT &kp CAPS &kp LGUI  &none         &kp K_CMENU &trans
                                               &none           &kp LALT        &kp LS(LCTRL)     &none     &none    &none
            >;
        };

        chars_layer {
            // -----------------------------------------------------------------------------
            // | TNS |  @  |  |  |  &  |  {  |  }  |   |  ¿  |  ?  |  $  |  #  |  \  | TNS |
            // | TNS |  `  |  '  |  "  |  (  |  )  |   |  %  |  +  |  *  |  /  |  =  | TNS |
            // | TNS |  ¨  |  ¡  |  !  |  [  |  ]  |   |  <  |  >  |  ^  |  ~  |     | TNS |
            //                   |     |     |     |   | CTL |     |     |
            // -----------------------------------------------------------------------------
            bindings = <
            &trans &kp ES_AT     &kp ES_PIPE &kp ES_AMPS &kp ES_LBRC &kp ES_RBRC      &kp ES_LQMK    &kp ES_RQMK   &kp ES_DOLLAR &kp ES_HASH  &kp ES_BCKSLH &trans
            &trans &kp ES_ACCT   &kp ES_SQT  &kp ES_DQT  &kp ES_LPAR &kp ES_RPAR      &kp ES_PERCENT &kp ES_PLUS   &kp ES_STAR   &kp ES_SLASH &kp ES_EQUAL  &trans
            &trans &kp ES_UMLAUT &kp ES_LEXC &kp ES_REXC &kp ES_LBCK &kp ES_RBCK      &kp ES_LESSTH  &kp ES_GREATH &kp ES_CARET  &kp ES_TILDE &none         &trans
                                             &trans      &trans      &trans           &kp RCTRL      &trans        &trans
            >;
        };

        numbers_layer {
            // -----------------------------------------------------------------------------------
            // |      |      | MLWS |      | MRWS |      |   |     |  7  |  8  |  9  |     |     |
            // |      |  F5  |  F6  |  F7  |  F9  | F10  |   |     |  4  |  5  |  6  |     |     |
            // |      |      | BPRV | BCLR | BNXT |      |   |     |  1  |  2  |  3  |  0  |     |
            //                      |      |      |      |   |     |     |     |
            // -----------------------------------------------------------------------------------
            bindings = <
			&none &none  &kp LS(LG(LEFT_ARROW)) &none      &kp LS(LG(RIGHT_ARROW)) &none        &none &kp N7 &kp N8 &kp N9 &none  &none
            &none &kp F5 &kp F6                 &kp F7     &kp F9                  &kp F10      &none &kp N4 &kp N5 &kp N6 &none  &none
			&none &none  &bt BT_PRV             &bt BT_CLR &bt BT_NXT              &none        &none &kp N1 &kp N2 &kp N3 &kp N0 &none
			                                    &none      &none                   &none        &none &none  &none
            >;
        };
    };
};
